// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.example



/** @param start
  *   Timestamps
  */
@SerialVersionUID(0L)
final case class Schedule(
    start: scala.Option[com.google.protobuf.Timestamp] = None,
    end: scala.Option[com.google.protobuf.Timestamp] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Schedule] with com.trueaccord.lenses.Updatable[Schedule] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (start.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(start.get.serializedSize) + start.get.serializedSize }
      if (end.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(end.get.serializedSize) + end.get.serializedSize }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      start.foreach { __v =>
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      end.foreach { __v =>
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.example.Schedule = {
      var __start = this.start
      var __end = this.end
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 34 =>
            __start = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __start.getOrElse(com.google.protobuf.Timestamp.defaultInstance)))
          case 42 =>
            __end = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __end.getOrElse(com.google.protobuf.Timestamp.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      org.example.Schedule(
          start = __start,
          end = __end
      )
    }
    def getStart: com.google.protobuf.Timestamp = start.getOrElse(com.google.protobuf.Timestamp.defaultInstance)
    def clearStart: Schedule = copy(start = None)
    def withStart(__v: com.google.protobuf.Timestamp): Schedule = copy(start = Some(__v))
    def getEnd: com.google.protobuf.Timestamp = end.getOrElse(com.google.protobuf.Timestamp.defaultInstance)
    def clearEnd: Schedule = copy(end = None)
    def withEnd(__v: com.google.protobuf.Timestamp): Schedule = copy(end = Some(__v))
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 4 => start.orNull
        case 5 => end.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 4 => start.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => end.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.example.Schedule
}

object Schedule extends com.trueaccord.scalapb.GeneratedMessageCompanion[org.example.Schedule] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[org.example.Schedule] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.example.Schedule = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.example.Schedule(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[com.google.protobuf.Timestamp]],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.google.protobuf.Timestamp]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.example.Schedule] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.example.Schedule(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[com.google.protobuf.Timestamp]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[com.google.protobuf.Timestamp]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ScheduleProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ScheduleProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 4 => __out = com.google.protobuf.Timestamp
      case 5 => __out = com.google.protobuf.Timestamp
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.example.Schedule(
  )
  implicit class ScheduleLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, org.example.Schedule]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, org.example.Schedule](_l) {
    def start: _root_.com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.Timestamp] = field(_.getStart)((c_, f_) => c_.copy(start = Some(f_)))
    def optionalStart: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.google.protobuf.Timestamp]] = field(_.start)((c_, f_) => c_.copy(start = f_))
    def end: _root_.com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.Timestamp] = field(_.getEnd)((c_, f_) => c_.copy(end = Some(f_)))
    def optionalEnd: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.google.protobuf.Timestamp]] = field(_.end)((c_, f_) => c_.copy(end = f_))
  }
  final val START_FIELD_NUMBER = 4
  final val END_FIELD_NUMBER = 5
}
